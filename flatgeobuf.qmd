---
title: FlatGeobuf
subtitle: Guidelines for FlatGeobuf
---

# FlatGeobuf

- This is a  new format, not derived on an existing file format, like COG is for TIFF.


### File layout

The internal layout of the file has four sections

### Row based

Internally, features are laid out in a row-oriented fashion rather than a column-oriented fasion.

todo

### No internal chunking

In contrast to some formats like COG and GeoParquet, there's no internal chunking.

todo

### No internal compression

Unlike some formats like Cloud-Optimized GeoTIFF and GeoParquet, FlatGeobuf does not include any support for _internal_ data compression.

This means that


For FlatGeobuf files with a spatial index, the index describes the byte ranges in the _uncompressed_ file. That means if you c

_Potentially_ it might

### No append support

FlatGeobuf is a write-only format, and doesn't support appending, as that would invalidate the spatial index in the file.

### Random access supported via spatial index

FlatGeobuf optionally supports a spatial index at the beginning of the file. This is a [_static packed Hilbert R-tree index_](https://flatgeobuf.org/#specification) that enables random access for each geometry in the file. That's a mouthful, so let's break it down:


<!-- Keep in mind that since FlatGeobuf isn't chunked, -->

And because FlatGeobuf is a row-based format, if some properties are really large, like if a column is a string description with many characters, you'll have a tradeoff between fetching lots of extra data to combine multiple requests into one or making many requests for small features that are scattered throughout the file.

### Streaming features is supported

This even works with compression algorithms like gzip or deflate that support streaming decompression.

A good example of this is [this example](https://observablehq.com/@bjornharrtell/streaming-flatgeobuf) by FlatGeobuf's author Bj√∂rn Harrtell. As the file is downloaded to the browser, portions of the file get rendered progressively in parts.


FlatGeobuf is a geospatial

FlatGeobuf created a _new_

- Write once

- Append not usually possible. is technically possible


### Full type system, except nested types

FlatGeobuf supports attributes with many primitive types, but does not support nested types without overhead. It defines a JSON type, but that requires parsing the internal JSON.

Dates are stored as strings, which must be parsed into an application's native date type.

### Known table schema

TODO: is there a guaranteed that every row in the file has the same schema? It looks like yes. https://github.com/flatgeobuf/flatgeobuf/blob/b013ac326568914aee43bcf3aa3c77574d629aa5/src/fbs/header.fbs#L75


### References

- [flatgeobuf.org](https://flatgeobuf.org/): Official project website.
-